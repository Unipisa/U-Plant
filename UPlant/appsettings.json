{
  "AppSettings": {
    "Application": {
      "NomeAppShort": "", //nome applicazione 
      "NomeAppLong": "", //nome che si visualizza sulla testata del header
      "Universita": "Università di X",
      //    "UrlLogoU": "img/cherubino-white.svg", // path logo a destra nel header
      "AltUrlLogoU": "logo", //testo immagine in rilievo
      "ClassUrlLogoU": "logocherubino", // definizione classe css per il logo a destra
      "Struttura": "Orto Botanico di X", //definizione struttura
      "UrlLogoSsmall": "img/uplant.png", // logo a sinistra quando il menù è aperto
      "UrlLogoSlarge": "img/uplantlarge.png", // logo a sinistra quando il menù è chiuso
      "NomeUrlLogoS": "Orto Botanico di Pisa", //nome logo a sinistra
      "Demo": true, //utilizzato da template ma escluso dal progetto
      "MessaggioDemo": "Versione dimostrativa di sviluppo locale", //messaggio se vuoi includere il layer dal template originario
      "UrlPrefix": "https://localhost:7038/", //link locahlost con porta
      "UrlBaseCode": "https://localhost:7038/",
      "CustomClaimsIdentityName": "UplantClaims", //variable di test non sfruttata
      "TypeAuth": "WSO2", ////SAML2 WSO2 o AZURE può avere sia gestione WSO2 rispettando i claim che gli arrivano altrimenti bisogna ritoccare il codice
      "TypeLanguage": "en-US" //lingua di default"
    },
    "GoogleMap": {
      "Url": "https://maps.google.com/maps/api/js?key=", // url di google maps
      "Key": "" // chiave google maps
    },
    "Pathfile": {
      "Basepath": "C:\\immagini", // il path fisico dove mettere le immagini es in windows "C:\\immagini"
      "LimitMaxUpload": "4194304", // limite delle immagini es "4194304"
      "Docs": "C:\\xlsx" // il path fisico dove vengono messi i documenti di estrazione xlsx es path in windows "C:\\xlsx"
    }
  },

  "ConnectionStrings": {
    "UPlant": "" // stringa di connessione del db
  },

  "AzureAd": {
    "Instance": "https://login.microsoftonline.com/",
    "Domain": "unipiit.onmicrosoft.com",
    "TenantId": "",  //id del tenant
    "ClientId": "",  //id del client
    "CallbackPath": "/signin-oidc"
  },



  "WSo2Auth": {
    "Name": "", //nome da assegnare al identity per wso2
    "ClientID": "",
    "ClientSecret": "",
    "AuthorizationEndpoint": "", //path endpoint di wso2 es "https://sitoweb.com/oauth2/authorize"
    "TokenEndpoint": "", //path endpoint di wso2 es "https://sitoweb.com/oauth2/token"
    "UserinfoEndpoint": "", //path endpoint di wso2 es "https://sitoweb.com/oauth2/userinfo"
    "CallbackPath": "/signin-oidc",
    "Scope": "openid",
    "Claims": [
      "principal",
      "sub",
      "credential",
      "given_name",
      "family_name",
      "fiscalNumber",
      "email"
    ]
  },
  "Saml2Auth": { // nel caso si utilizzi Saml2 questo è creato basandomi sul mio idp sarà da modificare il program.cs per adattare i claim del IDP
    "Name": "NewUPlant", //nome da assegnare se si vuole al context
    "EntityId": "https://sito.it:7038/Saml2", // entityid che corrisponde al url base del sito qui ci lascio un esempio
    "IdpEntity": "https://sitoidp.it/idp/shibboleth", // url dove trovare il metadata del IPD esempio https://sitoidp.it/idp/shibboleth o  https://sitoidp.it/idp/shibboleth/medata.xml
    "typeclaim_codicefiscale": "", // ho tirato fuori il type che shibboleth ritorna che nel mio caso si base solo codice fiscale e uid come sono questi due variabili ma potrebbero essere di più
    "typeclaim_udi": "", //
    "SigningCertificateFile": "Sutests.pfx", // file messo nella stessa posizione del appsetting ma può essere spostato del certificato di autenticazione con IDP per avere la validazione la configurazione del IPD deve essere forzata ad un algoritmo di cryptazione vecchio perchè windows non supporta AES-CGM
    "SigningCertificatePassword": "" // password del certificato quando si crea pfx si può proteggere con password che può essere settata qui
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },

  "AllowedHosts": "*"
}
